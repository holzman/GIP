#!/usr/bin/env python

import os
import sys
import pwd

def gipDir(tarDir, RPMDir):
    # if GIP_LOCATION is defined, return tarDir; otherwise return RPMDir
    if 'GIP_LOCATION' in os.environ:
        return tarDir

    return RPMDir

# check if we are root.  If we are, drop privileges to daemon to avoid
# permissions problems when CEMon tries to run the GIP
start_uid = os.getuid()
if start_uid == 0:
    # NOTE:  Must set gid first or you will get an "Operation not permitted"
    # error
    pwd_tuple = pwd.getpwnam("tomcat")
    pw_uid = pwd_tuple[2]
    pw_gid = pwd_tuple[3]

    os.setregid(pw_gid, pw_gid)
    os.setreuid(pw_uid, pw_uid)
else:
    # Not root so we can't change privileges so pass
    pass

#Standard testing imports:
if 'GIP_LOCATION' in os.environ:
    sys.path.append(os.path.expandvars("$GIP_LOCATION/lib/python"))
from gip_common import config, cp_get

#Add the path with the osg_info_wrapper script:
sys.path.append(os.path.expandvars(gipDir("$GIP_LOCATION/libexec",
                                   '/usr/libexec/gip')))
import osg_info_wrapper

def main():
    cp = config()
    if 'gip' not in cp.sections():
        cp.add_section('gip')
    cp.set("gip", "flush_cache", "True")
    try:
        osg_info_wrapper.main(cp)
    finally:
        temp_dir = os.path.expandvars(cp_get(cp, "gip", "temp_dir", \
            gipDir("$GIP_LOCATION/var/tmp", '/var/cache/gip')))
        osg_info_wrapper.flush_cache(temp_dir)

if __name__ == '__main__':
    main()

